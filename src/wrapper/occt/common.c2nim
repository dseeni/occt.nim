#ifdef C2NIM
#  def Standard_EXPORT
#  def Standard_OVERRIDE
#  def DEFINE_STANDARD_HANDLE(C1,C2) DEFINE_STANDARD_HANDLECLASS(C1,C2,Standard_Transient)
#  def DEFINE_STANDARD_HANDLECLASS(C1,C2,BC) class C1; typedef Handle(C1) Handle_##C1;
#  def Handle(Class) opencascade::handle<Class>
#  def DEFINE_STANDARD_RTTIEXT(Class,Base) \
    public: \
      typedef Base base_type; \
      static const char* get_type_name () { return #Class; OCCT_CHECK_BASE_CLASS(Class,Base) } \
      Standard_EXPORT static const Handle(Standard_Type)& get_type_descriptor (); \
      Standard_EXPORT virtual const Handle(Standard_Type)& DynamicType() const Standard_OVERRIDE;
#endif