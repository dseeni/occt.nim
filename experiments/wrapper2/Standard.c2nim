#ifdef C2NIM
#skipinclude
#assumendef _MSC_VER

#pp OCC_VERSION_MAJOR
#pp OCC_VERSION_MINOR
#pp OCC_VERSION_MAINTENANCE
#pp OCC_VERSION
#pp OCC_VERSION_STRING
#pp OCC_VERSION_COMPLETE
#pp OCC_VERSION_HEX
#pp OCC_VERSION_STRING_EXT
#assumendef OCC_VERSION_DEVELOPMENT

#def Handle(x) opencascade::handle<x>
#def DEFINE_STANDARD_HANDLECLASS(C1,C2,BC) class C1; typedef Handle(C1) Handle_##C1;
#def DEFINE_STANDARD_HANDLE(C1,C2) DEFINE_STANDARD_HANDLECLASS(C1,C2,Standard_Transient)
#def DEFINE_STANDARD_PHANDLE(C1,C2) DEFINE_STANDARD_HANDLECLASS(C1,C2,Standard_Persistent)


#def DEFINE_STANDARD_EXCEPTION(C1,C2) \
class C1 : public C2 { \
  void Throw () const Standard_OVERRIDE ; \
};

#def DEFINE_STANDARD_RTTI_INLINE(Class,Base) \
public: \
  typedef Base base_type; \
  static const char* get_type_name (); \
  static const Handle(Standard_Type)& get_type_descriptor (); \
  virtual const Handle(Standard_Type)& DynamicType() const Standard_OVERRIDE ; 

#def DEFINE_STANDARD_RTTIEXT(Class,Base) \
public: \
  typedef Base base_type; \
  static const char* get_type_name () ; \
  Standard_EXPORT static const Handle(Standard_Type)& get_type_descriptor () ; \
  Standard_EXPORT virtual const Handle(Standard_Type)& DynamicType() const Standard_OVERRIDE;

#def IMPLEMENT_STANDARD_RTTIEXT(Class,Base) \
  const Handle(Standard_Type)& Class::get_type_descriptor () ; \
  const Handle(Standard_Type)& Class::DynamicType() const ;

#assumedef _Standard_Integer_HeaderFile
#mangle Standard_Integer int

#assumedef _Standard_Real_HeaderFile
#mangle Standar_Real float


#assumedef _Standard_Boolean_HeaderFile
#mangle Standar_Boolean bool

#assumedef _Standard_ShortReal_HeaderFile
#mangle Short_Real float32

#assumedef OCCT_NO_RVALUE_REFERENCE

#assumedef _Standard_Macro_HeaderFile
#def fallthrough
#def Standard_OVERRIDE override
#def Standard_FALLTHROUGH
#def Standard_NODISCARD
#def Standard_UNUSED
#def Standard_THREADLOCAL thread_local
#def Standard_DEPRECATED(theMsg)
#def Standard_DISABLE_DEPRECATION_WARNINGS
#def Standard_ENABLE_DEPRECATION_WARNINGS
#def OCCT_NO_RVALUE_REFERENCE
#def Standard_EXPORT
#def Standard_EXPORTEXTERN extern
#def Standard_EXPORTEXTERNC extern "C"
#def Standard_IMPORT extern
#def Standard_IMPORTC extern "C"

#assumedef _Standard_DefineAlloc_HeaderFile
#def DEFINE_STANDARD_ALLOC_ARRAY                \
   void* operator new[] (size_t theSize) ;        \             
   void  operator delete[] (void* theAddress) ;  

#def DEFINE_STANDARD_ALLOC_PLACEMENT             \
   void* operator new (size_t, void* theAddress) ; \
   void operator delete (void*, void*) ;     

#def DEFINE_STANDARD_ALLOC                  \
  void* operator new (size_t theSize) ;      \ 
  void  operator delete (void* theAddress) ; \ 
  DEFINE_STANDARD_ALLOC_ARRAY               \
  DEFINE_STANDARD_ALLOC_PLACEMENT

#def STANDARD_ALIGNED(theAlignment, theType, theVar) theType theVar
#endif